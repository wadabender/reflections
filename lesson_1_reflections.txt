How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	By showing the differences between file versions,
	diff highlights where the code has changed, 
	allowing me to see where bug-causing code may
	have been introduced

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	I can see how the program evolved and follow the
	logic of the original developer.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

	Sometimes you don't save.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

	Because unlike google docs files, which are
	typically very independent of each other, 
	git files usually function only as a package.

How can you use the commands git log and git diff to view the history of files?

	First you use log to see the order of commits,
	then use diff to see the changes between any
	two commits.

How might using version control make you more confident to make changes that could break something?
	
	If I know I can go back, I'd be more willing
	to make experimental changes to the code.

Now that you have your workspace set up, what do you want to try using Git for?

	Probably whatever Udacity wants me to do.